{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Front\\\\web\\\\react2\\\\memeGenerator\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport boxes from './boxes';\nimport { useState } from 'react';\nimport Boxie from './Boxie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contact, setContact] = useState(boxes);\n  function toggleColor(id) {\n    setContact(prevS => {\n      const newSquires = [];\n      for (let i = 0; i < prevS.length; i++) {\n        const currentSquire = prevS[i];\n        if (currentSquire.id === id) {\n          const updatedSquare = {\n            ...currentSquire,\n            on: !currentSquire.on\n          };\n          newSquires.push(updatedSquare);\n        } else {\n          newSquires.push(currentSquire);\n        }\n      }\n      return newSquires;\n    });\n  }\n  let box = contact.map(a => /*#__PURE__*/_jsxDEV(Boxie, {\n    theId: a.id,\n    isOn: toggleColor,\n    isValue: a.on,\n    id: a.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: box\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0yyfMEawIIpdS6nM0aXmo3o0JRE=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["boxes","useState","Boxie","jsxDEV","_jsxDEV","App","_s","contact","setContact","toggleColor","id","prevS","newSquires","i","length","currentSquire","updatedSquare","on","push","box","map","a","theId","isOn","isValue","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Front/web/react2/memeGenerator/src/App.jsx"],"sourcesContent":["import './App.css';\nimport boxes from './boxes';\nimport { useState } from 'react';\nimport Boxie from './Boxie';\nfunction App() {\n  const [contact,setContact]=useState(boxes)\n  function toggleColor(id){\n   \n    setContact(prevS=>{\n        const newSquires=[]\n        for (let i =0;i<prevS.length;i++){\n            const currentSquire=prevS[i]\n            if (currentSquire.id===id){\n              const updatedSquare ={\n                ...currentSquire,on:!currentSquire.on\n              }\n              newSquires.push(updatedSquare)\n            }else{\n              newSquires.push(currentSquire)\n            }\n        }\n        return newSquires\n    } )\n    \n  }\n  let box=contact.map(\n    (a)=>(\n    <Boxie theId={a.id} isOn={toggleColor} isValue={a.on} id={a.id}/>)\n  )\n  return (\n    <div >\n      {box}\n    </div>\n    \n  )\n};\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACP,QAAQ,CAACD,KAAK,CAAC;EAC1C,SAASS,WAAWA,CAACC,EAAE,EAAC;IAEtBF,UAAU,CAACG,KAAK,IAAE;MACd,MAAMC,UAAU,GAAC,EAAE;MACnB,KAAK,IAAIC,CAAC,GAAE,CAAC,EAACA,CAAC,GAACF,KAAK,CAACG,MAAM,EAACD,CAAC,EAAE,EAAC;QAC7B,MAAME,aAAa,GAACJ,KAAK,CAACE,CAAC,CAAC;QAC5B,IAAIE,aAAa,CAACL,EAAE,KAAGA,EAAE,EAAC;UACxB,MAAMM,aAAa,GAAE;YACnB,GAAGD,aAAa;YAACE,EAAE,EAAC,CAACF,aAAa,CAACE;UACrC,CAAC;UACDL,UAAU,CAACM,IAAI,CAACF,aAAa,CAAC;QAChC,CAAC,MAAI;UACHJ,UAAU,CAACM,IAAI,CAACH,aAAa,CAAC;QAChC;MACJ;MACA,OAAOH,UAAU;IACrB,CAAE,CAAC;EAEL;EACA,IAAIO,GAAG,GAACZ,OAAO,CAACa,GAAG,CAChBC,CAAC,iBACFjB,OAAA,CAACF,KAAK;IAACoB,KAAK,EAAED,CAAC,CAACX,EAAG;IAACa,IAAI,EAAEd,WAAY;IAACe,OAAO,EAAEH,CAAC,CAACJ,EAAG;IAACP,EAAE,EAAEW,CAAC,CAACX;EAAG;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAClE,CAAC;EACD,oBACExB,OAAA;IAAAyB,QAAA,EACGV;EAAG;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGV;AAACtB,EAAA,CA/BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA+BX;AACD,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}