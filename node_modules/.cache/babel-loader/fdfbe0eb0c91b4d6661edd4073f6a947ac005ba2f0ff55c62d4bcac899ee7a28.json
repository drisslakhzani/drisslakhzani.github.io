{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Front\\\\web\\\\react2\\\\memeGenerator\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport boxes from './boxes';\nimport { useState } from 'react';\nimport Boxie from './Boxie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contact, setContact] = useState(boxes);\n  function toggleColor(id) {\n    setContact(prevS => {\n      return prevS.map(a => a.id === id ? {\n        ...a,\n        on: !a.on\n      } : a);\n\n      // const newSquires=[]\n      // for (let i =0;i<prevS.length;i++){\n      //     const currentSquire=prevS[i]\n      //     if (currentSquire.id===id){\n      //       const updatedSquare ={\n      //         ...currentSquire,on:!currentSquire.on\n      //       }\n      //       newSquires.push(updatedSquare)\n      //     }else{\n      //       newSquires.push(currentSquire)\n      //     }\n      // }\n      // return newSquires\n    });\n  }\n\n  let box = contact.map(a => /*#__PURE__*/_jsxDEV(Boxie, {\n    theId: a.id,\n    isOn: toggleColor,\n    isValue: a.on,\n    id: a.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dis\",\n    children: box\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0yyfMEawIIpdS6nM0aXmo3o0JRE=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["boxes","useState","Boxie","jsxDEV","_jsxDEV","App","_s","contact","setContact","toggleColor","id","prevS","map","a","on","box","theId","isOn","isValue","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Front/web/react2/memeGenerator/src/App.jsx"],"sourcesContent":["import './App.css';\nimport boxes from './boxes';\nimport { useState } from 'react';\nimport Boxie from './Boxie';\nfunction App() {\n  const [contact,setContact]=useState(boxes)\n  function toggleColor(id){\n   \n    setContact(prevS=>{\n        return prevS.map((a)=>(a.id===id?{...a,on:!a.on}:a))\n          \n        // const newSquires=[]\n        // for (let i =0;i<prevS.length;i++){\n        //     const currentSquire=prevS[i]\n        //     if (currentSquire.id===id){\n        //       const updatedSquare ={\n        //         ...currentSquire,on:!currentSquire.on\n        //       }\n        //       newSquires.push(updatedSquare)\n        //     }else{\n        //       newSquires.push(currentSquire)\n        //     }\n        // }\n        // return newSquires\n    } )\n    \n  }\n  let box=contact.map(\n    (a)=>(\n    <Boxie theId={a.id} isOn={toggleColor} isValue={a.on} id={a.id}/>)\n  )\n  return (\n    <div className='dis' >\n      {box}\n    </div>\n    \n  )\n};\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACP,QAAQ,CAACD,KAAK,CAAC;EAC1C,SAASS,WAAWA,CAACC,EAAE,EAAC;IAEtBF,UAAU,CAACG,KAAK,IAAE;MACd,OAAOA,KAAK,CAACC,GAAG,CAAEC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAGA,EAAE,GAAC;QAAC,GAAGG,CAAC;QAACC,EAAE,EAAC,CAACD,CAAC,CAACC;MAAE,CAAC,GAACD,CAAE,CAAC;;MAEpD;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAE,CAAC;EAEL;;EACA,IAAIE,GAAG,GAACR,OAAO,CAACK,GAAG,CAChBC,CAAC,iBACFT,OAAA,CAACF,KAAK;IAACc,KAAK,EAAEH,CAAC,CAACH,EAAG;IAACO,IAAI,EAAER,WAAY;IAACS,OAAO,EAAEL,CAAC,CAACC,EAAG;IAACJ,EAAE,EAAEG,CAAC,CAACH;EAAG;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAClE,CAAC;EACD,oBACElB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBT;EAAG;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGV;AAAChB,EAAA,CAjCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAiCX;AACD,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}