{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Documents\\\\Front\\\\web\\\\react2\\\\Testing\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { json } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [login, setLogin] = useState({\n    email: \"\",\n    password: \"\",\n    newsletter: \"\",\n    cPassword: \"\",\n    join: false\n  });\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      checked,\n      type\n    } = event.target;\n    setLogin(prevForm => {\n      return {\n        ...prevForm,\n        [name]: type === \"checkbox\" ? checked : value\n      };\n    });\n  }\n  console.log(login.join);\n  function handleSubmit(event) {\n    login.password === login.cPassword ? console.log(\"success\") : console.log(\"error\");\n    event.preventDefault();\n    JSON.stringify(login, \"./data.json\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"email\",\n        name: \"email\",\n        value: login.email,\n        placeholder: \"enter your email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"password\",\n        name: \"password\",\n        value: login.password,\n        placeholder: \"enter a password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"password\",\n        name: \"cPassword\",\n        value: login.cPassword,\n        placeholder: \"confirm your password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"join\",\n          checked: login.join,\n          id: \"check\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"check\",\n          children: \"I want to join my new sletter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I6UBNbaRaQIChCgo26Ja8N5vR1Q=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","json","jsxDEV","_jsxDEV","App","_s","login","setLogin","email","password","newsletter","cPassword","join","handleChange","event","name","value","checked","type","target","prevForm","console","log","handleSubmit","preventDefault","JSON","stringify","onSubmit","children","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Documents/Front/web/react2/Testing/src/App.jsx"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport { json } from 'react-router-dom';\n\nfunction App() {\n const [login,setLogin]=useState({\n  email:\"\",password:\"\",newsletter:\"\" ,cPassword:\"\" ,join:false\n })\n function handleChange(event){\n  const{name,value,checked,type}=event.target\n  setLogin(prevForm=>{\n    \n    return{...prevForm,[name]:type===\"checkbox\"?checked:value}\n    \n  })\n }\n console.log(login.join)\n function handleSubmit(event){\n  login.password===login.cPassword?console.log(\"success\"):console.log(\"error\")\n  event.preventDefault()\n  JSON.stringify(login,\"./data.json\")\n  \n  \n }\n  \n  return (\n    <form onSubmit={handleSubmit}  >\n      <div className='form'>\n          <input className='input' type=\"email\" name=\"email\" value={login.email} placeholder='enter your email' onChange={handleChange}/>\n\n          <input className='input' type=\"password\" name=\"password\" value={login.password} placeholder='enter a password' onChange={handleChange}/>\n\n          <input className='input' type=\"password\" name=\"cPassword\" value={login.cPassword} placeholder='confirm your password' onChange={handleChange}/>\n          <div>\n              <input type=\"checkbox\" name='join' checked={login.join} id='check' onChange={handleChange} />\n\n              <label htmlFor=\"check\">I want to join my new sletter</label>\n          </div>\n          \n      </div>\n      <button className='btn-submit'>Submit</button>\n    </form>\n  )\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}